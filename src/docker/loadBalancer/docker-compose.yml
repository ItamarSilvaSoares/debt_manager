version: "3"

services:
  app1-balancer:
    image: node:lts
    container_name: app1-balancer
    build: ../../../
    tty: true
    stdin_open: true
    command: bash
    restart: always
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - 3010:3001
    environment:
      - APP_PORT=3010
      - JWT_SECRET=jwt_secret
      - DB_PASS=password
      - DB_HOST=db
      - DB_PORT=3306
    depends_on:
      db_mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5

  app2-balancer:
    image: node:lts
    container_name: app2-balancer
    build: ../../../
    tty: true
    stdin_open: true
    command: bash
    restart: always
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - 3011:3001
    environment:
      - APP_PORT=3011
      - JWT_SECRET=jwt_secret
      - DB_PASS=password
      - DB_HOST=db
      - DB_PORT=3306
    depends_on:
      db_mysql:
        condition: service_healthy

  db_mysql:
    image: mysql:8.0.23
    restart: always
    container_name: mysql_db
    environment:
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores

  ngnix:
    image: nginx
    container_name: ngnix
    build: ../nginx
    ports:
      - 8080:80
    depends_on:
      - app1-balancer

networks:
  # Rede padrão, criada automaticamente
  default:
    # Dá um nome específico à rede padrão
    name: project_mysql_balancer
